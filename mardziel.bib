@string{inproc    = "Proceedings of the "}
@string{invited   = "Invited paper, "}
@string{submitted = "(Submitted)"}
@string{toappear  = "(To appear)"}

@string{acm  = "ACM "}
@string{ieee = "IEEE "}

@string{break = "<p/>"}

%%% AUTHRS
@author{piotr-mardziel,
 name = {Piotr Mardziel},
 link = {http://piotr.mardziel.com},
 icon = {http://piotr.mardziel.com/images/wolf_gap1_mug.jpg},
 institution = {CMU},
}

@author{aseem-rastogi,
 name = {Aseem Rastogi},
 link = {http://www.cs.umd.edu/~aseem},
 icon = {http://www.cs.umd.edu/~aseem/pic.jpg},
 institution = {MSR},
}

@author{matthew-hammer,
 name = {Matthew Hammer},
 link = {http://matthewhammer.org},
 icon = {http://matthewhammer.org/MatthewHammer.jpg},
 institution = {UColorado},
}

@author{michael-hicks,
 name = {Michael Hicks},
 link = {http://www.cs.umd.edu/~mwh},
 icon = {http://www.cs.umd.edu/~mwh/mike2011.jpg},
 institution = {UMD},
}

@author{stephen-magill,
 name = {Stephen Magill},
 link = {http://www.cs.cmu.edu/~smagill},
 icon = {http://www.cs.cmu.edu/~smagill/common/portrait.gif},
 institution = {Galois},
}

@author{mudhakar-srivatsa,
 name = {Mudhakar Srivatsa},
 link = {http://researcher.watson.ibm.com/researcher/view.php?person=us-msrivats},
 icon = {http://researcher.watson.ibm.com/researcher/photos/779.jpg},
 institution = {IBM Research},
}

@author{jonathan-katz,
 name = {Jonathan Katz},
 link = {http://www.cs.umd.edu/~jkatz},
 icon = {http://www.cs.umd.edu/projects/photohistory/facultypictures_full/katz.jpg},
 institution = {UMD},
}

@author{adam-bender,
 name = {Adam Bender},
 institution = {Google},
}

@author{deve-levin,
 name = {Dave Levin},
 link = {http://www.cs.umd.edu/~dml},
 icon = {http://www.cs.umd.edu/~dml/dml_canossa.jpg},
 institution = {UMD},
}

@author{mario-alvim,
 name = {Mario Alvim},
 link = {https://sites.google.com/site/msalvimjr/},
 icon = {https://sites.google.com/site/msalvimjr/_/rsrc/1380582081949/home/ms.jpg},
 institution = {UFMG},
}

@author{michael-clarkson,
 name = {Michael R. Clarkson},
 link = {http://www.cs.cornell.edu/~clarkson/},
 icon = {http://www.cs.cornell.edu/~clarkson/img/mrc_slope300.jpg},
 institution = {Cornell},
}

@author{arman-khouzani,
 name = {MHR Khouzani},
 link = {http://www.eecs.qmul.ac.uk/~khouzani/},
 icon = {http://www.eecs.qmul.ac.uk/~khouzani/Images/khouzani_2013.jpg},
 institution = {Queen Mary},
}

@author{carlos-cid,
 name = {Carlos Cid},
 institution = {Royal Holloway},
}

@author{andrew-ruef,
 name = {Andrew Ruef},
 link = {http://www.cs.umd.edu/~awruef/},
 icon = {http://gravatar.com/avatar/b1fb9fc883e69d6b5829e2095c31ec9d?s=200},
 institution = {UMD},
}

@author{james-parker,
 name = {James Parker},
 institution = {UMD},
}

@author{atif-memon,
 name = {Atif Memon},
 institution = {UMD},
}

@author{jandelyn-plane,
 name = {Jandelyn Plane},
 institution = {UMD}
}

@author{michelle-mazurek,
 name = {Michelle Mazurek},
 link = {https://www.umiacs.umd.edu/~mmazurek},
 icon = {https://umiacs.umd.edu/~mmazurek/misc/mazurek-9394.jpg},
 institution = {UMD},
}

%%% JOURNALS
%%%%%% JCS
@string{jcs  = "Journal of Computer Security"}

@ARTICLE{mardziel13belieflong,
  TITLE = {Dynamic Enforcement of Knowledge-based Security Policies using Probabilistic Abstract Interpretation},
  AUTHOR = {Piotr Mardziel and Stephen Magill and Michael Hicks and Mudhakar Srivatsa},
  YEAR = 2013,
  MONTH = JAN,
  JOURNAL = jcs,
  _link_doc = {http://www.cs.umd.edu/~mwh/papers/beliefpol-extended.pdf},
  _keywords = {information security, quantified information flow},
  _abstract = {This paper explores the idea of knowledge-based
                  security policies, which are used to decide whether
                  to answer queries over secret data based on an
                  estimation of the querier's (possibly increased)
                  knowledge given the results. Limiting knowledge is
                  the goal of existing information release policies
                  that employ mechanisms such as noising,
                  anonymization, and redaction. Knowledge-based
                  policies are more general: they increase flexibility
                  by not fixing the means to restrict information
                  flow. We enforce a knowledge-based policy by
                  explicitly tracking a model of a querier's belief
                  about secret data, represented as a probability
                  distribution, and denying any query that could
                  increase knowledge above a given threshold. We
                  implement query analysis and belief tracking via
                  abstract interpretation, which allows us to trade
                  off precision and performance through the use of
                  abstraction. We have developed an approach to
                  augment standard abstract domains to include
                  probabilities, and thus define distributions. We
                  focus on developing probabilistic polyhedra in
                  particular, to support numeric programs. While
                  probabilistic abstract interpretation has been
                  considered before, our domain is the first whose
                  design supports sound conditioning, which is
                  required to ensure that estimates of a querier's
                  knowledge are accurate. Experiments with our
                  implementation show that several useful queries can
                  be handled efficiently, particularly compared to
                  exact (i.e., sound) inference involving sampling. We
                  also show that, for our benchmarks, restricting
                  constraints to octagons or intervals, rather than
                  full polyhedra, can dramatically improve performance
                  while incurring little to no loss in precision.}
}

%%% CONFERENCES
%%%%%% POST
@string{post = "Principles of Security and Trust (POST)"}

@inproceedings{alvim2017quantifying,
  title     = {Quantifying vulnerability of secret generation using hyper-distributions},
  author    = {Mario Alvim and Piotr Mardziel and Michael Hicks},
  booktitle = inproc # post,
  year      = {2017},
  month     = apr,
  url       = {http://www.dcc.ufmg.br/~msalvim/publications/2017-POST.pdf},
  _abstract = {Traditional approaches to Quantitative Information Flow
                  (QIF) represent the adversary's prior knowledge of
                  possible secret values as a single probability
                  distribution. This representation may miss important
                  structure. For instance, representing prior
                  knowledge about passwords of a system's users in
                  this way overlooks the fact that many users generate
                  passwords using some \emph{strategy}. Knowledge of
                  such strategies can help the adversary in guessing a
                  secret, so ignoring them may underestimate the
                  secret's vulnerability. In this paper we explicitly
                  model strategies as distributions on secrets, and
                  generalize the representation of the adversary's
                  prior knowledge from a distribution on secrets to an
                  \emph{environment}, which is a distribution on
                  strategies (and, thus, a distribution on
                  distributions on secrets, called a
                  \emph{hyper-distribution}). By applying
                  information-theoretic techniques to environments we
                  derive several meaningful generalizations of the
                  traditional approach to QIF. In particular, we
                  disentangle the \emph{vulnerability of a secret}
                  from the \emph{vulnerability of the strategies} that
                  generate secrets, and thereby distinguish
                  \emph{\aggrsecurity}---which relies on the
                  uncertainty over strategies---from
                  \emph{\realsecurity}---which relies on the intrinsic
                  uncertainty within a strategy. We also demonstrate
                  that, in a precise way, no further generalization of
                  prior knowledge (e.g., by using distributions of
                  even higher order) is needed to soundly quantify the
                  vulnerability of the secret.},
}

%%%%%% CSF
@string{csf       = ieee # "Computer Security Foundations Symposium (CSF)"}

@inproceedings{khouzani15picking,
  title =        {Picking vs. Guessing Secrets: A Game-Theoretic
                  Analysis},
  author =       {MHR Khouzani and Piotr Mardziel and Carlos Cid and Mudhakar Srivatsa},
  booktitle =    inproc # csf,
  year =         2015,
  month =        jul,
  url =         {http://piotr.mardziel.com/docs/khouzani15picking.paper.pdf},
  _abstract = {Choosing a hard-to-guess secret is a prerequisite in
                  many security applications. Whether it is a password
                  for user authentication or a secret key for a
                  cryptographic primitive, picking it requires the
                  user to trade-off usability costs with resistance
                  against an adversary: a simple password is easier to
                  remember but is also easier to guess; likewise, a
                  shorter cryptographic key may require fewer
                  computational and storage resources but it is also
                  easier to attack. A fundamental question is how one
                  can optimally resolve this trade-off. A big
                  challenge is the fact that an adversary can also
                  utilize the knowledge of such usability vs. security
                  trade-offs to strengthen its attack. In this paper,
                  we propose a game-theoretic framework for analyzing
                  the optimal trade-offs in the face of strategic
                  adversaries. We consider two types of adversaries:
                  those limited in their number of tries, and those
                  that are ruled by the cost of making individual
                  guesses. For each type, we derive the
                  mutually-optimal decisions as Nash Equilibria, the
                  strategically pessimistic decisions as maximin, and
                  optimal commitments as Strong Stackelberg Equilibria
                  of the game. We establish that when the adversaries
                  are faced with a capped number of guesses, the
                  user's optimal trade-off is a uniform randomization
                  over a subset of the secret domain. On the other
                  hand, when the attacker strategy is ruled by the
                  cost of making individual guesses, Nash Equilibria
                  may completely fail to provide the user with any
                  level of security, signifying the crucial role of
                  credible commitment for such cases. We illustrate
                  our results using numerical examples based on
                  real-world samples and discuss some policy
                  implications of our work.},
}
%   url       = {http://www.cs.umd.edu/~mwh/papers/beliefpol.pdf},

@INPROCEEDINGS{mardziel11belief,
  TITLE = {Dynamic Enforcement of Knowledge-based Security Policies},
  AUTHOR = {Piotr Mardziel and Stephen Magill and Michael Hicks and Mudhakar Srivatsa},
  BOOKTITLE = inproc # csf,
  YEAR = 2011,
  MONTH = JUN,
  PAGES = {114--128},
  _link_doc = {http://www.cs.umd.edu/~mwh/papers/beliefpol.pdf},
  _keywords = {information security, quantified information flow},
  _abstract = {This paper explores the idea of knowledge-based
                  security policies, which are used to decide whether
                  to answer queries over secret data based on an
                  estimation of the querier's (possibly increased)
                  knowledge given the results. Limiting knowledge is
                  the goal of existing information release policies
                  that employ mechanisms such as noising,
                  anonymization, and redaction. Knowledge-based
                  policies are more general: they increase flexibility
                  by not fixing the means to restrict information
                  flow. We enforce a knowledge-based policy by
                  explicitly tracking a model of a querier's belief
                  about secret data, represented as a probability
                  distribution, and denying any query that could
                  increase knowledge above a given threshold. We
                  implement query analysis and belief tracking via
                  abstract interpretation using a novel probabilistic
                  polyhedral domain, whose design permits trading off
                  precision with performance while ensuring estimates
                  of a querier's knowledge are sound. Experiments with
                  our implementation show that several useful queries
                  can be handled efficiently, and performance scales
                  far better than would more standard implementations
                  of probabilistic computation based on sampling.}
}

%%%%%% S&P OAKLAND
@string{sap       = ieee # "Symposium on Security and Privacy (S&P)"}

@INPROCEEDINGS{mardziel14time,
  AUTHOR = {Piotr Mardziel and Mario Alvim and Michael Hicks and Michael R. Clarkson},
  TITLE = {Quantifying Information Flow for Time-Varying Data},
  BOOKTITLE = inproc # sap,
  MONTH = MAY,
  YEAR = 2014,
  _link_doc = {http://www.cs.umd.edu/~mwh/papers/qif-dynamic-secrets.pdf},
  _keywords = {information security, quantified information flow},
  _abstract = {A metric is proposed for quantifying leakage of
                  information about secrets and about how secrets
                  change over time. The metric is used with a model of
                  information flow for probabilistic, interactive
                  systems with adaptive adversaries. The model and
                  metric are implemented in a probabilistic
                  programming language and used to analyze several
                  examples. The analysis demonstrates that adaptivity
                  increases information flow. }
}

%%%%%% CCS
@string{ccs       = acm  # "Conference on Computer and Communications Security (CCS)"}

@INPROCEEDINGS{ruef2016bibifi,
  AUTHOR = {Andrew Ruef and Michael Hicks and James Parker and Dave Levin and Michelle Mazurek and Piotr Mardziel},
  TITLE = {Build It, Break It, Fix It: Contesting Secure Development},
  BOOKTITLE = inproc # ccs,
  YEAR = {2016},
  MONTH = OCT,
  _link_doc = {http://arxiv.org/abs/1606.01881},
  _keywords = {secure coding contest},
  _abstract = {Typical security contests focus on breaking or
                  mitigating the impact of buggy systems. We present
                  the Build-it, Break-it, Fix-it (BIBIFI) contest,
                  which aims to assess the ability to securely build
                  software, not just break it. In BIBIFI, teams build
                  specified software with the goal of maximizing
                  correctness, performance, and security. The latter
                  is tested when teams attempt to break other teams'
                  submissions. Winners are chosen from among the best
                  builders and the best breakers. BIBIFI was designed
                  to be open-ended-teams can use any language, tool,
                  process, etc. that they like. As such, contest
                  outcomes shed light on factors that correlate with
                  successfully building secure software and breaking
                  insecure software. During 2015, we ran three
                  contests involving a total of 116 teams and two
                  different programming problems. Quantitative
                  analysis from these contests found that the most
                  efficient build-it submissions used C/C++, but
                  submissions coded in other statically-typed
                  languages were less likely to have a security flaw;
                  build-it teams with diverse programming-language
                  knowledge also produced more secure code. Shorter
                  programs correlated with better scores. Break-it
                  teams that were also successful build-it teams were
                  significantly better at finding security bugs.},
                  
}

%%% WORKSHOPS
%%%%%% FCS
@string{fcs   = "Workshop on Foundations of Computer Security (FCS)"}

@INPROCEEDINGS{alvim16strategy,
  AUTHOR =       {Mario Alvim and Piotr Mardziel and Michael Hicks},
  TITLE =        {Towards the Quantification of Strategy Leakage},
  BOOKTITLE =    fcs,
  MONTH =        jul,
  YEAR =         2016,
  _keywords = {information security, quantified information flow},
}

@inproceedings{mardziel14loss,
  AUTHOR = {Piotr Mardziel and Mario Alvim and Michael Hicks},
  TITLE = {Adversary Gain vs. Defender Loss in Quantified Information Flow},
  BOOKTITLE = inproc # fcs,
  MONTH = JUL,
  YEAR = 2014,
  _link_doc = {http://www.cs.umd.edu/~mwh/papers/qifgl.pdf},
  _keywords = {information security, quantified information flow},
  _abstract = { Metrics for quantifying information leakage assume
                  that an adversary's gain is the defender's loss. We
                  demonstrate that this assumption does not always
                  hold via a class of scenarios. We describe how to
                  extend quantification to account for a defender with
                  goals distinct from adversary failure. We implement
                  the extension and experimentally explore the impact
                  on the measured information leakage of the
                  motivating scenario. },
}

%%%%%% PLAS
@string{plas = acm # " SIGPLAN Workshop on Programming Languages and Analysis for Security (PLAS)"}

@INPROCEEDINGS{mardziel12smc,
  TITLE = {Knowledge-Oriented Secure Multiparty Computation},
  AUTHOR = {Piotr Mardziel and Michael Hicks and Jonathan Katz and Mudhakar Srivatsa},
  BOOKTITLE = inproc # plas,
  MONTH = JUN,
  YEAR = 2012,
  _link_doc = {http://www.cs.umd.edu/~mwh/papers/belief-smc.pdf},
  _keywords = {information security, secure multi-party computation, quantified information flow},
  _abstract = {Protocols for secure multiparty computation (SMC) allow
                  a set of mutually distrusting parties to compute a
                  function f of their private inputs while revealing
                  nothing about their inputs beyond what is implied by
                  the result. Depending on f, however, the result
                  itself may reveal more information than parties are
                  comfortable with. Almost all previous work on SMC
                  treats f as given. Left unanswered is the question
                  of how parties should decide whether it is ``safe''
                  for them to compute f in the first place. } # break
                  # {We propose here a way to apply belief tracking to
                  SMC in order to address exactly this question. In
                  our approach, each participating party is able to
                  reason about the increase in knowledge that other
                  parties could gain as a result of computing f, and
                  may choose not to participate (or participate only
                  partially) so as to restrict that gain in knowledge.
                  We develop two techniques-the belief set method and
                  the SMC belief tracking method-prove them sound, and
                  discuss their precision/performance tradeoffs using
                  a series of experiments. }
}
@inproceedings{rastogi13knowledge,
  AUTHOR = {Aseem Rastogi and Piotr Mardziel and Matthew Hammer and Michael Hicks},
  TITLE = {Knowledge Inference for Optimizing Secure Multi-party Computation},
  MONTH = JUN,
  YEAR = 2013,
  BOOKTITLE = plas,
  _link_doc = {http://www.cs.umd.edu/~mwh/papers/smc-knowledge.pdf},
  _keywords = {information security, secure multi-party computation},
  _abstract = {In secure multi-party computation, mutually distrusting
                  parties cooperatively compute functions of their
                  private data; in the process, they only learn
                  certain results as per the protocol (e.g., the final
                  output). The realization of these protocols uses
                  cryptographic techniques to avoid leaking
                  information between the parties. A protocol for a
                  secure computation can sometimes be optimized
                  without changing its security guarantee: when the
                  parties can use their private data and the revealed
                  output to infer the values of other data, then this
                  other data need not be concealed from them via
                  cryptography. } # break # {In the context of
                  automatically optimizing secure multi-party
                  computation, we define two related problems,
                  knowledge inference and constructive knowledge
                  inference. In both problems, we attempt to
                  automatically discover when and if intermediate
                  variables used in a protocol will (eventually) be
                  known to the parties involved in the computation.
                  Provably-known variables offer optimization
                  opportunities.} # break # {We formally state the
                  problem of knowledge inference (and its constructive
                  variant); we describe our solutions, which are built
                  atop existing, standard technology such as SMT
                  solvers. We show that our approach is sound, and
                  further, we characterize the completeness properties
                  enjoyed by our approach. We have implemented our
                  approach, and present a preliminary experimental
                  evaluation. }
}

@inproceedings{ruef15bibifi,
  title =        {Build It Break It: Measuring and Comparing
                  Development Security},
  author =       {Andrew Ruef and Michael Hicks and James Parker and
                  Dave Levin and Atif Memon and Jandelyn Plane and
                  Piotr Mardziel},
  booktitle =    {Proceedings of the USENIX Workshop on Cyber Security
                  Instrumentation and Test (CSET)},
  month =        AUG,
  year =         2015,
  _link_doc =    {http://www.cs.umd.edu/~mwh/papers/bibifi-cset15.pdf},
  _keywords =    {secure coding contest},
}

%%% OTHER
%%%%%% technical reports

@techreport{khouzani15pickingTR,
  title =        {Picking vs. Guessing Secrets: A Game-Theoretic
                  Analysis},
  author =       {MHR Khouzani and Piotr Mardziel and Carlos Cid and Mudhakar Srivatsa},
  year =         2015,
  month =        may,
 INSTITUTION = {arXiv},
  url =         {http://arxiv.org/abs/1505.02325},
  _abstract = {Choosing a hard-to-guess secret is a prerequisite in
                  many security applications. Whether it is a password
                  for user authentication or a secret key for a
                  cryptographic primitive, picking it requires the
                  user to trade-off usability costs with resistance
                  against an adversary: a simple password is easier to
                  remember but is also easier to guess; likewise, a
                  shorter cryptographic key may require fewer
                  computational and storage resources but it is also
                  easier to attack. A fundamental question is how one
                  can optimally resolve this trade-off. A big
                  challenge is the fact that an adversary can also
                  utilize the knowledge of such usability vs. security
                  trade-offs to strengthen its attack. In this paper,
                  we propose a game-theoretic framework for analyzing
                  the optimal trade-offs in the face of strategic
                  adversaries. We consider two types of adversaries:
                  those limited in their number of tries, and those
                  that are ruled by the cost of making individual
                  guesses. For each type, we derive the
                  mutually-optimal decisions as Nash Equilibria, the
                  strategically pessimistic decisions as maximin, and
                  optimal commitments as Strong Stackelberg Equilibria
                  of the game. We establish that when the adversaries
                  are faced with a capped number of guesses, the
                  user's optimal trade-off is a uniform randomization
                  over a subset of the secret domain. On the other
                  hand, when the attacker strategy is ruled by the
                  cost of making individual guesses, Nash Equilibria
                  may completely fail to provide the user with any
                  level of security, signifying the crucial role of
                  credible commitment for such cases. We illustrate
                  our results using numerical examples based on
                  real-world samples and discuss some policy
                  implications of our work.}
}

@techreport{mardziel14timeTR,
  AUTHOR = {Piotr Mardziel and Mario Alvim and Michael Hicks and Michael R. Clarkson},
  TITLE = {Quantifying Information Flow for Time-Varying Data},
  BOOKTITLE = inproc # sap,
  MONTH = MAY,
  YEAR = 2014,
  NUMBER = {CS-TR-xxx},
  INSTITUTION = {University of Maryland Department of Computer Science},
  NOTE = {Extended version with proofs and memory limited adversary},
  _keywords = {information security, quantified information flow},
  _abstract = {A metric is proposed for quantifying leakage of
                  information about secrets and about how secrets
                  change over time. The metric is used with a model of
                  information flow for probabilistic, interactive
                  systems with adaptive adversaries. The model and
                  metric are implemented in a probabilistic
                  programming language and used to analyze several
                  examples. The analysis demonstrates that adaptivity
                  increases information flow. }
}

@TECHREPORT{mardziel11beliefTR,
  TITLE = {Dynamic Enforcement of Knowledge-based Security Policies},
  AUTHOR = {Piotr Mardziel and Stephen Magill and Michael Hicks and Mudhakar Srivatsa},
  NUMBER = {CS-TR-4978},
  INSTITUTION = {University of Maryland Department of Computer Science},
  YEAR = 2011,
  MONTH = JUL,
  NOTE = {Extended version with proofs and additional benchmarks},
  _link_doc = {http://www.cs.umd.edu/~mwh/papers/beliefpolTR.pdf},
  _keywords = {information security, quantified information flow},
  _abstract = {This paper explores the idea of knowledge-based
                  security policies, which are used to decide whether
                  to answer queries over secret data based on an
                  estimation of the querier's (possibly increased)
                  knowledge given the results. Limiting knowledge is
                  the goal of existing information release policies
                  that employ mechanisms such as noising,
                  anonymization, and redaction. Knowledge-based
                  policies are more general: they increase flexibility
                  by not fixing the means to restrict information
                  flow. We enforce a knowledge-based policy by
                  explicitly tracking a model of a querier's belief
                  about secret data, represented as a probability
                  distribution, and denying any query that could
                  increase knowledge above a given threshold. We
                  implement query analysis and belief tracking via
                  abstract interpretation using a novel probabilistic
                  polyhedral domain, whose design permits trading off
                  precision with performance while ensuring estimates
                  of a querier's knowledge are sound. Experiments with
                  our implementation show that several useful queries
                  can be handled efficiently, and performance scales
                  far better than would more standard implementations
                  of probabilistic computation based on sampling.}
}

